<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <title>NEXUS STUDIO REAL</title>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" href="https://cdn-icons-png.flaticon.com/512/3096/3096673.png">
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #000;
      color: white;
      padding: 20px;
      text-align: center;
      margin: 0;
    }
    #chat {
      background: #111;
      padding: 20px;
      border-radius: 15px;
      min-height: 250px;
      margin: 20px auto;
      max-width: 500px;
      overflow-y: auto;
      border: 2px solid #e91e63;
      word-wrap: break-word;
      overflow-wrap: break-word;
    }
    button {
      padding: 15px 30px;
      margin: 10px;
      border: none;
      border-radius: 30px;
      background: #e91e63;
      color: white;
      font-size: 16px;
      cursor: pointer;
      transition: all 0.3s;
    }
    button:hover {
      background: #d81b60;
    }
    input {
      padding: 15px;
      width: 80%;
      max-width: 400px;
      border-radius: 30px;
      border: none;
      background: #222;
      color: white;
      margin: 10px;
    }
    input:focus {
      outline: none;
    }
    #userInput {
      background: #111;
    }
    .voice-btn {
      background: #9c27b0;
      padding: 20px;
      border-radius: 30px;
      display: block;
      margin: 20px auto;
      max-width: 400px;
      cursor: pointer;
      transition: all 0.3s;
      user-select: none;
    }
    .voice-btn:hover {
      background: #8e24aa;
    }
    .voice-btn:active {
      transform: scale(0.98);
    }
    .action-btns {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 10px;
      margin: 20px 0;
    }
    h1 {
      color: #e91e63;
      text-shadow: 0 0 10px #e91e63;
    }
  </style>
</head>
<body>
  <h1>üé• NEXUS STUDIO REAL</h1>
  <div id="chat">Ol√°, mestre. Como posso criar seu pr√≥ximo v√≠deo hoje?</div>
  
  <input type="text" id="userInput" placeholder="Digite seu comando..." onkeydown="if(event.key=='Enter') sendText()">
  <button onclick="sendText()" aria-label="Enviar comando de texto">üì§ Enviar Comando</button>

  <div class="voice-btn" onclick="startVoice()" role="button" tabindex="0" aria-label="Ativar reconhecimento de voz">
    üéôÔ∏è Toque para falar com sua Deusa Criadora
  </div>

  <div class="action-btns">
    <button onclick="generateVideo()">üé¨ Gerar V√≠deo Real</button>
    <button onclick="generateMusic()">üéµ Criar M√∫sica Real</button>
    <button onclick="autoPost()">üì§ Postar Autom√°tico</button>
  </div>

  <script>
    let isListening = false;

    function updateChat(message) {
      const chat = document.getElementById('chat');
      const p = document.createElement('p');
      p.textContent = message;
      chat.appendChild(p);
      chat.scrollTo({ top: chat.scrollHeight, behavior: 'smooth' });
    }

    function sendText() {
      const input = document.getElementById('userInput');
      const command = input.value.trim();
      if (command) {
        updateChat(`üë§ Voc√™: ${command}`);
        input.value = '';
        if (isListening) {
          isListening = false;
          document.querySelector('.voice-btn').textContent = "üéôÔ∏è Toque para falar com sua Deusa Criadora";
        }
        simulateAIResponse(command);
      }
    }

    function startVoice() {
      if (isListening) return;
      const status = document.querySelector('.voice-btn');
      status.textContent = "üéôÔ∏è Escutando...";
      isListening = true;

      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
      if (!SpeechRecognition) {
        alert("Seu navegador n√£o suporta reconhecimento de voz. Use Chrome ou Edge.");
        status.textContent = "üéôÔ∏è Toque para falar com sua Deusa Criadora";
        isListening = false;
        return;
      }

      const recognition = new SpeechRecognition();
      recognition.lang = 'pt-BR';
      recognition.interimResults = false;
      recognition.maxAlternatives = 1;

      recognition.start();

      recognition.onresult = (event) => {
        const transcript = event.results[0][0].transcript.trim();
        if (transcript) {
          updateChat(`üé§ Voc√™ ( voz ): ${transcript}`);
          simulateAIResponse(transcript);
        }
      };

      recognition.onerror = (event) => {
        console.error('Erro no reconhecimento de voz:', event.error);
        status.textContent = "Erro na grava√ß√£o";
        isListening = false;
        setTimeout(() => {
          status.textContent = "üéôÔ∏è Toque para falar com sua Deusa Criadora";
        }, 3000);
      };

      recognition.onend = () => {
        if (isListening) {
          status.textContent = "üéôÔ∏è Toque para falar com sua Deusa Criadora";
          isListening = false;
        }
      };
    }

    function speak(text) {
      if (!('speechSynthesis' in window)) {
        console.warn("S√≠ntese de voz n√£o suportada neste dispositivo.");
        return;
      }
      const utterance = new SpeechSynthesisUtterance(text);
      utterance.lang = 'pt-BR';
      utterance.rate = 0.9;
      utterance.pitch = 1.1;
      speechSynthesis.speak(utterance);
    }

    function simulateAIResponse(command) {
      updateChat("üß† NEXUS STUDIO REAL est√° pensando...");
      const responses = [
        "Claro, mestre. Considera feito.",
        "Analisando... Dados coletados com sucesso.",
        "Modo Deusa ativado. Tomarei decis√µes por voc√™.",
        "Postei no Instagram pra voc√™. #NexusStudio",
        "Lembrete agendado. Voc√™ ser√° notificado em 1h.",
        "C√¢mera analisada. Rosto do mestre reconhecido.",
        "Sua a√ß√£o favorita subiu 5%! Hora de vender?",
        "Clima perfeito para um caf√©. Quer que eu agende?",
        "Seu concorrente postou algo novo. Quer que eu analise?",
        "Voc√™ bebeu √°gua hoje? Vou te lembrar daqui a 30min."
      ];
      setTimeout(() => {
        const response = responses[Math.floor(Math.random() * responses.length)];
        updateChat(`üíé NEXUS STUDIO REAL: ${response}`);
        speak(response);
      }, 2500);
    }

    function generateVideo() {
      updateChat("üé¨ Gerando v√≠deo real com IA...");
      setTimeout(() => {
        updateChat("‚úÖ V√≠deo gerado! Clique no link abaixo para baixar:");
        const link = document.createElement('a');
        link.href = 'https://sample-videos.com/video123/mp4/720/big_buck_bunny_720p_1mb.mp4';
        link.target = '_blank';
        link.rel = 'noopener noreferrer';
        link.textContent = 'üì• Baixar video_1.mp4';
        link.style.color = '#e91e63';
        link.style.display = 'block';
        link.style.marginTop = '10px';
        document.getElementById('chat').appendChild(link);
        speak("V√≠deo gerado! Clique no link para baixar.");
      }, 2000);
    }

    function generateMusic() {
      updateChat("üéµ Criando m√∫sica real com IA...");
      setTimeout(() => {
        updateChat("‚úÖ M√∫sica gerada! Clique no link abaixo para ouvir:");
        const link = document.createElement('a');
        link.href = 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3';
        link.target = '_blank';
        link.rel = 'noopener noreferrer';
        link.textContent = 'üéß Ouvir musica_1.mp3';
        link.style.color = '#e91e63';
        link.style.display = 'block';
        link.style.marginTop = '10px';
        document.getElementById('chat').appendChild(link);
        speak("M√∫sica gerada! Clique no link para ouvir.");
      }, 2000);
    }

    function autoPost() {
      updateChat("üì§ Postando automaticamente no Instagram...");
      setTimeout(() => {
        updateChat("‚úÖ Postagem feita! Confira seu perfil.");
        speak("Postagem feita! Confira seu perfil.");
      }, 2000);
    }
  </script>
</body>
</html>
